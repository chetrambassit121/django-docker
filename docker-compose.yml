version: "3.8"
services:

  # Redis
  redis:
    image: redis:alpine
    container_name: redis

  # Database Postgres
  db:
    image: postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password123
    container_name: postgres_db

  # Django Application
  app:
    build: .
    volumes:
      - .:/django
    ports:
      - 8000:8000
    image: app:django
    container_name: django_app
    command: python manage.py runserver 0.0.0.0:8000
    depends_on:
      - db 
      
  # Celery
  celery:
    restart: always
    build:
      context: .
    command: celery -A core worker -l DEBUG
    volumes:
      - .:/django
    container_name: celery
    depends_on:
      - db
      - redis
      - app










# version: "3.8"
# services:
#   app:
#     build: .
#     volumes:
#       - .:/django
#     ports:
#       - 8000:8000
#     image: app:django
#     container_name: django_container
#     command: python manage.py runserver 0.0.0.0:8000
#     depends_on:
#       - db 
#   db:
#     image: postgres
#     volumes:
#       - ./data/db:/var/lib/postgresql/data
#     environment:
#       - POSTGRES_DB=postgres
#       - POSTGRES_USER=postgres
#       - POSTGRES_PASSWORD=password123
#     container_name: postgres_db

#     # image: mysql:5.7
#     # environment:
#     #   MYSQL_DATABASE: 'django-app-db'
#     #   MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
#     # volumes:
#     #   - ./data/mysql/db:/var/lib/mysql










# version: "3.8"
# services:
#   app:
#     build: .
#     volumes:
#       - .:/django
#     ports:
#       - 8000:8000
#     image: app:django
#     container_name: django_container
#     command: python manage.py runserver 0.0.0.0:8000



